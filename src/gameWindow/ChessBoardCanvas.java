/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gameWindow;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import utils.Config;
import java.awt.Point;

/**
 * Draw game interface platform
 * @author 汪有为 | 何炎柏
 */
public class ChessBoardCanvas extends javax.swing.JPanel {

    Image backgroundImage;
    Image selectFrame;
    ChessBoarder chessBoarder;
    int leftUpX;
    int leftUpY;
    int rightDownX;
    int rightDownY;
    
    /**
     * Creates new form ChessBoardCanvas
     */
    public ChessBoardCanvas() {
        initComponents();
        backgroundImage = Toolkit.getDefaultToolkit().getImage("src/imageLibary/gameBoard.jpg");
        selectFrame = Toolkit.getDefaultToolkit().getImage("src/imageLibary/frame.png");
    }
    
    @Override
    public void paintComponent(Graphics g){
        super.paintChildren(g);
        
        g.drawImage(backgroundImage, 0, 0, backgroundImage.getWidth(null), backgroundImage.getHeight(null), this);
        int startX = Config.startX;
        int startY = Config.startY;
        int dist = Config.distPoint2Point;
        ChessPieces[][] chessPieces = ChessWindow.getChessPieces();
        for (int i = 0; i < 7; i++) {
            for (int j = 0; j < 5; j++) {
                   if(chessPieces[i][j] != null){
                       int x = startX + j * dist;
                       int y = startY + i * dist;
                       g.drawImage(chessPieces[i][j].Icon, x, y, chessPieces[i][j].Icon.getWidth(null), chessPieces[i][j].Icon.getWidth(null), this);
                   }
            }
        }
        Point p = ChessWindow.chessBoarder.getPoint();
        if (p != null) {
            g.drawImage(selectFrame, startX + dist * p.x, startY + dist * p.y, selectFrame.getWidth(null), selectFrame.getHeight(null), this);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
